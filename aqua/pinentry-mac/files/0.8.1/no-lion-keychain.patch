diff --git a/KeychainSupport.m b/KeychainSupport.m
index 1ed3da2..a6b8363 100644
--- a/KeychainSupport.m
+++ b/KeychainSupport.m
@@ -39,41 +39,7 @@ void storePassphraseInKeychain(NSString *fingerprint, NSString *passphrase, NSSt
     }
 	
 	
-	if (NSAppKitVersionNumber >= NSAppKitVersionNumber10_7) {
-		
-		
-		NSDictionary *attributes = [NSDictionary dictionaryWithObjectsAndKeys:
-									kSecClassGenericPassword, kSecClass,
-									@GPG_SERVICE_NAME, kSecAttrService,
-									fingerprint, kSecAttrAccount,
-									kCFBooleanTrue, kSecReturnRef,
-									keychainRef, kSecUseKeychain,
-									nil];
-		
-		status = SecItemCopyMatching((CFDictionaryRef)attributes, (CFTypeRef *)&itemRef);
-		
-		
-		if (status == 0) {
-			if (passphrase) {
-				SecKeychainItemModifyAttributesAndData (itemRef, nil, [passphrase lengthOfBytesUsingEncoding:NSUTF8StringEncoding], passphrase.UTF8String);
-			} else {
-				SecKeychainItemDelete(itemRef);
-			}
-			CFRelease(itemRef);
-		} else {
-			if (passphrase) {
-				NSDictionary *attributes = [NSDictionary dictionaryWithObjectsAndKeys:
-											kSecClassGenericPassword, kSecClass,
-											@GPG_SERVICE_NAME, kSecAttrService,
-											fingerprint, kSecAttrAccount,
-											[passphrase dataUsingEncoding:NSUTF8StringEncoding], kSecValueData,
-											label ? label : @GPG_SERVICE_NAME, kSecAttrLabel,
-											keychainRef, kSecUseKeychain,
-											nil];
-				
-				SecItemAdd((CFDictionaryRef)attributes, nil);
-			}
-		}
+	if (0) {
 		
 	} else { /* Mac OS X 10.6 */
 		status = SecKeychainFindGenericPassword (keychainRef, strlen(GPG_SERVICE_NAME), GPG_SERVICE_NAME,
@@ -113,27 +79,8 @@ NSString *getPassphraseFromKeychain(NSString *fingerprint) {
 	
 	NSString *passphrase = nil;
 	
-	if (NSAppKitVersionNumber >= NSAppKitVersionNumber10_7) {
-		NSDictionary *attributes = [NSDictionary dictionaryWithObjectsAndKeys:
-									kSecClassGenericPassword, kSecClass,
-									@GPG_SERVICE_NAME, kSecAttrService,
-									fingerprint, kSecAttrAccount,
-									kCFBooleanTrue, kSecReturnData,
-									keychainRef, kSecUseKeychain,
-									nil];
-		NSData *passphraseData = nil;
-		
-		status = SecItemCopyMatching((CFDictionaryRef)attributes, (CFTypeRef *)&passphraseData);
-		
-		
-		if (keychainRef) CFRelease(keychainRef);
-		if (status != 0) {
-			return nil;
-		}
-		
-		passphrase = [[[NSString alloc] initWithData:passphraseData encoding:NSUTF8StringEncoding] autorelease];
+	if (0) {
 		
-		CFRelease(passphraseData);
 	} else { /* Mac OS X 10.6 */
 		UInt32 passphraseLength;
 		void *passphraseData = NULL;
